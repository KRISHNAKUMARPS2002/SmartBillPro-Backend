// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PaymentMethod {
  CASH
  UPI
  CARD
  OTHER
}

model User {
  id        String   @id @default(cuid())
  userId    String   @unique
  clientId  String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders Order[]
}

model Table {
  id       String  @id @default(cuid())
  number   Int
  name     String?
  isActive Boolean @default(true)
  clientId String
  orders   Order[]
}

model Item {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Float
  imageUrl    String?
  inStock     Boolean  @default(true)
  clientId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orderItems OrderItem[]
}

model Order {
  id            String        @id @default(cuid())
  tableId       String
  userId        String
  clientId      String
  total         Float
  paymentMethod PaymentMethod @default(CASH)
  createdAt     DateTime      @default(now())

  table      Table       @relation(fields: [tableId], references: [id])
  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
}

model OrderItem {
  id       String @id @default(cuid())
  orderId  String
  itemId   String
  quantity Int
  price    Float

  order Order @relation(fields: [orderId], references: [id])
  item  Item  @relation(fields: [itemId], references: [id])
}
